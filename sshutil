#!/bin/bash

FILENAME='/path/to/config'
FIRST_ARG=$1
SECOND_ARG=$2
THIRD_ARG=$3
ALIAS=''
SECOND_ALIAS=''
CMD=''

# SET WHICH COMMAND SHALL BE EXECUTED 
# BASED ON PARAMETERS ADDED TO COMMAND
# SET ALIAS
if [[ $FIRST_ARG != '-c' ]]; then
	ALIAS=$FIRST_ARG
	CMD='connect'
else 
	ALIAS=$SECOND_ARG
	SECOND_ALIAS=$THIRD_ARG
	CMD='copy'
fi

# DEFINE ALL PROPERTIES
USER=''
HOST=''
EXPECT=''
USE_PASS=''
USE_KEY=''
PROMPT=''
REMOTEDIR='~/'

# FIND AND SET PROPERTIES ABOVE 
# BASED ON ALIAS VARIABLE
function setConfig {

	ALIAS=$1
	ALIASFOUND=false
	# RESET ALL PROPERTIES TO DEFAULT
	USER=''
	HOST=''
	EXPECT=''
	USE_PASS=''
	USE_KEY=''
	PROMPT=''
	REMOTEDIR='~/'

	# SEARCH FOR ALIAS AND PROPERTIES
	while read -r line
	do
		length=${#line}
		lineArray=($line)

		property=${lineArray[0]}
		value=${lineArray[1]}
		
		# CHECK FOR ALIAS
		if [[ $property == 'ALIAS' ]]; then
			# FIND ALIAS
			if [[ $value == $ALIAS ]]; then
				echo $property $value
				ALIASFOUND=true
			fi
		fi

		# IF ALIAS HAS BEEN FOUND
		if [ $ALIASFOUND = true ]; then

			# GET ALL PROPERTIES 
			if [[ $property == 'USER' ]]; then
				USER=$value
				echo $USER
			fi
			if [[ $property == 'HOST' ]]; then
				HOST=$value
			fi
			if [[ $property == 'USE_PASS' ]]; then
				USE_PASS=$value
				EXPECT="*assword*"
			fi
			if [[ $property == 'USE_KEY' ]]; then
				USE_KEY=$value
				EXPECT="*phrase*"
			fi
			if [[ $property == 'PROMPT' ]]; then
				PROMPT=$value
			fi
			if [[ $property == 'REMOTEDIR' ]]; then
				REMOTEDIR=$value
			fi

			# END LOOP
			if [ $length -eq 0 ]; then
				break;
			fi
		fi
	done < $FILENAME

		# GET PASSWORD 
		if [[ $USE_PASS == 'true' ]]; then
			echo -n "Please enter your password: "
			read -s PASSWORD
		fi
		# GET PASSPHRASE 
		if [[ $USE_KEY == 'true' ]]; then
			echo -n "Please enter your key passphrase: "
			read -s PASSWORD
		fi

	# ECHO ALIAS NOT FOUND
	if [ $ALIASFOUND = false ]; then
		echo "alias $ALIAS not found"
	fi

	echo ""
}

# Executes script for 
# connecting via ssh to the desired
# remote directory
function connect {

	# SET CONFIG PROPERTIES
	setConfig $ALIAS

	if [ $ALIASFOUND = true ]; then
		# EXECUTE EXPECT COMMAND
		expect -c "spawn ssh $USER@$HOST; expect \"$EXPECT\"; send \"$PASSWORD\r\"; expect \"*$PROMPT*\"; send \"cd $REMOTEDIR\r\"; interact;" 
		#/usr/bin/expect -c 'expect "\n" { eval spawn ssh }'
	fi
}

function copy {

	echo 'copy'

	expect_cmd="spawn scp -r "

	setConfig $ALIAS
	FIRST_PATH=$USER'@'$HOST':'$REMOTEDIR
	FIRST_EXPECT=$EXPECT
	FIRST_PASSWORD=$PASSWORD

	setConfig $SECOND_ALIAS
	SECOND_PATH=$USER'@'$HOST':'$REMOTEDIR
	SECOND_EXPECT=$EXPECT
	SECOND_PASSWORD=$PASSWORD

	expect_cmd=$expect_cmd' '$FIRST_PATH' '$SECOND_PATH

	echo ""
	echo $expect_cmd
	#expect -c "spawn scp -r $FIRST_PATH $SECOND_PATH; expect \"$EXPECT\"; send \"$PASSWORD\r\";"
}

# EXECUTE COMMAND BASED ON FIRST PARAMETER
if [[ $CMD == 'connect' ]]; then
	# EXECUTE EXPECT COMMAND
	connect
elif [[ $CMD == 'copy' ]]; then
	copy
fi

